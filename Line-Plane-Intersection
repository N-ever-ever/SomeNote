//bool GetLinePlaneCrossP(const Eigen::Vector3f& p1,const Eigen::Vector3f& p2,const Eigen::Vector4f& plane,Eigen::Vector3f& crossP)
//{
//    //求分子P1D
//    auto P1D = plane[0]*p1[0] + plane[1]*p1[1] + plane[2]*p1[2]+plane[3];//ax1+by1+cz1+d//or采用向量点乘方式
//
//    const Eigen::Vector3f P1P2 = p2-p1;
//
//    //求分母P1D2
//    auto P1D2 = plane[0]*P1P2[0] + plane[1]*P1P2[1] + plane[2]*P1P2[2];
//    if( std::abs(P1D2)<FLT_EPSILON )
//        return false;//平行
//
//    auto m = P1D/P1D2;
//    crossP = p1 - m*P1P2;//注意:此处是 负号- 同时求m时无绝对值符号
//
//    return true;
//}

https://www.kristakingmath.com/blog/intersection-of-a-line-and-a-plane
https://mathinsight.org/line_parametrization_examples
